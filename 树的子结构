/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
        bool HasSubtreechild(TreeNode* pRoot1, TreeNode* pRoot2)
        {
             if(pRoot2==NULL)
                return true;
            if(pRoot1==NULL)
                return false;
           
            if(pRoot1->val!=pRoot2->val)
                return false;
            return  HasSubtreechild( pRoot1->left,pRoot2->left)&& HasSubtreechild(pRoot1->right, pRoot2->right);
        }
    bool HasSubtree(TreeNode* pRoot1, TreeNode* pRoot2)
    {
        if(pRoot2==NULL)
            return false;
        if(pRoot1==NULL)
            return false;
         if(pRoot1->val==pRoot2->val&&HasSubtreechild(pRoot1,pRoot2))
         {
            
                return true;
           
         }
        else
        {
           return  HasSubtree(pRoot1->left,pRoot2)||HasSubtree(pRoot1->right,pRoot2);
        }
    }
};
