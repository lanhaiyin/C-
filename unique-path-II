class Solution {
public:
    /**
     * 
     * @param obstacleGrid int整型vector<vector<>> 
     * @return int整型
     */
    int uniquePathsWithObstacles(vector<vector<int> >& obstacleGrid) {
        // write code here
        int n=obstacleGrid.size();int m=obstacleGrid[n-1].size();
        
       vector< vector<int>> ans(n,vector<int> (m,0));
        for(int i=0;i<n;++i)
        {
            if(obstacleGrid[i][0]==1)
                break;
            ans[i][0]=1;
        }
          for(int j=0;j<m;++j)
        {
            if(obstacleGrid[0][j]==1)
                break;
            ans[0][j]=1;
        }
        for(int i=1;i<n;++i)
        {
            for(int j=1;j<m;++j)
            {
                if(obstacleGrid[i][j]==1)
                    ans[i][j]=0;
                else
                    ans[i][j]=ans[i-1][j]+ans[i][j-1];               
            }
        }

      
        return ans[n-1][m-1];
    }
};
