/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTreefun(vector<int>preorder,int pre_begin,int pre_end,
    vector<int>inorder,int in_begin,int in_end)
    {
        if(pre_begin>pre_end||in_begin>in_end)
        return NULL;
        TreeNode *root=new TreeNode(preorder[pre_begin]);
        for(int i=in_begin;i<=in_end;i++)
        {
            if(preorder[pre_begin]==inorder[i])
            {
                //i的左边是左子树的，右边是右子树的
            
               root->left= buildTreefun(preorder,pre_begin+1,pre_begin+i-in_begin,inorder,in_begin,i-1); 
               root->right= buildTreefun(preorder,pre_begin+i-in_begin+1,pre_end,inorder,i+1,in_end); 
                break;
            }
        }
      return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {

     return buildTreefun( preorder,0,preorder.size()-1,inorder,0,inorder.size()-1); 
    }
    
};
