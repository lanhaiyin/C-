/**
 * struct TreeNode {
 *	int val;
 *	struct TreeNode *left;
 *	struct TreeNode *right;
 * };
 */

class Solution {
public:
    /**
     * 
     * @param root TreeNode类 the root of binary tree
     * @return int整型vector<vector<>>
     */
    void fun1(TreeNode*root,vector<int>& arr1)
    {
        if(root==NULL)
            return ;
        arr1.push_back(root->val);
        fun1(root->left,arr1);
        fun1(root->right,arr1);
    }
     void fun2(TreeNode*root,vector<int>& arr2)
    {
        if(root==NULL)
            return ;
        fun2(root->left,arr2);
          arr2.push_back(root->val);
        fun2(root->right,arr2);
    }
     void fun3(TreeNode*root,vector<int>& arr3)
    {
        if(root==NULL)
            return ;
        fun3(root->left,arr3);
        fun3(root->right,arr3);
           arr3.push_back(root->val);
    }
    vector<vector<int> > threeOrders(TreeNode* root) {
          vector<vector<int> >ans;
        if(root==NULL)
            return ans;
        // write code here
        TreeNode*temp=root;
      
        vector<int> arr1;
         vector<int> arr2;
         vector<int> arr3;
        fun1(temp,arr1);
        fun2(temp,arr2);
        fun3(temp,arr3);
       
        ans.push_back(arr1);
        ans.push_back(arr2);
        ans.push_back(arr3);
            return ans;
        
    }
};
